<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.LoginLogMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.LoginLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
    <result column="ip_source" property="ipSource" jdbcType="VARCHAR" />
    <result column="browser" property="browser" jdbcType="VARCHAR" />
    <result column="os" property="os" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, nickname, ip_address, ip_source, browser, os, remark, state, login_time
  </sql>
  <select id="getTotal" resultType="java.lang.Long">
    select count(*) from login_log
    <if test="keywords != null">
      where nickname like concat('%',#{keywords},'%')
    </if>
  </select>
  <select id="getLoginLogByPage" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from login_log
    <if test="keywords != null">
      where nickname like concat('%',#{keywords},'%')
    </if>
    <if test="page != null and size != null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from login_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteLoginLog">
    delete from login_log where id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.LoginLog" >
    insert into login_log (id, username, nickname, 
      ip_address, ip_source, browser, 
      os, remark, state, 
      login_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{ipAddress,jdbcType=VARCHAR}, #{ipSource,jdbcType=VARCHAR}, #{browser,jdbcType=VARCHAR}, 
      #{os,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.LoginLog" >
    insert into login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="ipAddress != null" >
        ip_address,
      </if>
      <if test="ipSource != null" >
        ip_source,
      </if>
      <if test="browser != null" >
        browser,
      </if>
      <if test="os != null" >
        os,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null" >
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="ipSource != null" >
        #{ipSource,jdbcType=VARCHAR},
      </if>
      <if test="browser != null" >
        #{browser,jdbcType=VARCHAR},
      </if>
      <if test="os != null" >
        #{os,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.LoginLog" >
    update login_log
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null" >
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="ipSource != null" >
        ip_source = #{ipSource,jdbcType=VARCHAR},
      </if>
      <if test="browser != null" >
        browser = #{browser,jdbcType=VARCHAR},
      </if>
      <if test="os != null" >
        os = #{os,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.LoginLog" >
    update login_log
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      ip_source = #{ipSource,jdbcType=VARCHAR},
      browser = #{browser,jdbcType=VARCHAR},
      os = #{os,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="login_type" property="loginType" jdbcType="BIT" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_address" property="loginAddress" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="expired" property="expired" jdbcType="BIT" />
    <result column="locked" property="locked" jdbcType="BIT" />
    <result column="credentialsNotExpired" property="credentialsNotExpired" jdbcType="BIT" />
    <result column="del_flag" property="delFlag" jdbcType="BIT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, nickname, avatar, email, phone, gender, login_type, last_login_time, 
    login_ip, login_address, enabled, expired, locked, credentialsNotExpired, del_flag, 
    create_user, create_time, update_user, update_time, remark
  </sql>
  <select id="getAllUser" resultMap="BaseResultMap">
    select u.id, u.username, u.nickname,u.remark,u.update_time,u.update_user,u.create_time,u.create_user,u.enabled,u.avatar,u.email,u.last_login_time,u.login_address,u.login_ip,u.gender,u.phone,u.expired, u.locked, u.credentialsNotExpired from sys_user u
    <if test="keywords!=null">
      where u.nickname like concat('%',#{keywords},'%')
    </if>
  </select>
  <select id="getUserRoleyId" resultType="com.example.demo.model.SysRole">
    select r.* from sys_role r,sys_user_role ur where ur.role_id = r.id and ur.user_id = #{id}
  </select>
  <select id="loadUserByUsername" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_user where username = #{username}
  </select>
  <delete id="deleteUsers">
    delete from sys_user where id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.SysUser" >
    insert into sys_user (id, username, password, 
      nickname, avatar, email, 
      phone, gender, login_type, last_login_time, 
      login_ip, login_address, enabled, 
      expired, locked, credentialsNotExpired, 
      del_flag, create_user, create_time, 
      update_user, update_time, remark
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{loginType,jdbcType=BIT}, #{lastLoginTime,jdbcType=TIMESTAMP},
      #{loginIp,jdbcType=VARCHAR}, #{loginAddress,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, 
      #{expired,jdbcType=BIT}, #{locked,jdbcType=BIT}, #{credentialsNotExpired,jdbcType=BIT}, 
      #{delFlag,jdbcType=BIT}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="loginType != null" >
        login_type,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="loginAddress != null" >
        login_address,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="expired != null" >
        expired,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="credentialsNotExpired != null" >
        credentialsNotExpired,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="loginType != null" >
        #{loginType,jdbcType=BIT},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginAddress != null" >
        #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="expired != null" >
        #{expired,jdbcType=BIT},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=BIT},
      </if>
      <if test="credentialsNotExpired != null" >
        #{credentialsNotExpired,jdbcType=BIT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.SysUser" >
    update sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="loginType != null" >
        login_type = #{loginType,jdbcType=BIT},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginAddress != null" >
        login_address = #{loginAddress,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="expired != null" >
        expired = #{expired,jdbcType=BIT},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="credentialsNotExpired != null" >
        credentialsNotExpired = #{credentialsNotExpired,jdbcType=BIT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.SysUser" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      login_type = #{loginType,jdbcType=BIT},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_address = #{loginAddress,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      expired = #{expired,jdbcType=BIT},
      locked = #{locked,jdbcType=BIT},
      credentialsNotExpired = #{credentialsNotExpired,jdbcType=BIT},
      del_flag = #{delFlag,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>